generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Show {
  id          Int           @id @default(autoincrement())
  date        DateTime
  time        String // Podés usar enum si tenés horarios fijos
  capacity    Int // Capacidad total para ese horario
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Reservation Reservation[]

  @@unique([date, time])
}

model TicketType {
  id              Int               @id @default(autoincrement())
  name            String // Ej: 'Simple', 'Con tapa y bebida'
  price           Float
  description     String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ReservationItem ReservationItem[]
}

model Reservation {
  id              Int      @id @default(autoincrement())
  reservationCode String   @unique
  customerName    String
  customerEmail   String
  showId          Int
  createdAt       DateTime @default(now())

  show  Show              @relation(fields: [showId], references: [id])
  items ReservationItem[]
}

model ReservationItem {
  id            Int @id @default(autoincrement())
  reservationId Int
  typeId        Int
  quantity      Int @default(1)

  reservation Reservation @relation(fields: [reservationId], references: [id])
  type        TicketType  @relation(fields: [typeId], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum IncomeType {
  tickets
  tickets_web
  barra
  otros
}

model Income {
  id            Int            @id @default(autoincrement())
  amount        Float
  date          DateTime       @default(now())
  type          IncomeType?
  paymentMethod PaymentMethod?
  description   String?
}

enum PaymentMethod {
  efectivo
  tarjeta
  bizum
  transferencia
  otro
}

enum ExpenseCategory {
  publicidad
  bar
  sueldos
  artistas
  alquiler
  servicios
  insumos
  mantenimiento
  comisiones
  varios
}

model Expense {
  id          Int             @id @default(autoincrement())
  amount      Float
  category    ExpenseCategory
  description String?
  date        DateTime        @default(now())
}