generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Show {
  id            Int           @id @default(autoincrement())
  date          DateTime
  time          String // Podés usar enum si tenés horarios fijos
  title         String  @default("") // Nuevo: título visible del show
  description   String? // Nuevo: descripción opcional
  genre         Genre? // Nuevo: género (enum)
  capacity      Int // Capacidad total para ese horario
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  Reservation   Reservation[]
  cashClosureId Int?
  cashClosure   CashClosure?  @relation("CashClosureShows", fields: [cashClosureId], references: [id])

  @@unique([date, time])
}

enum Genre {
  FLAMENCO
  TANGO
  MILONGA
  POP
  CANTAUTOR
  FOLCLORE
  OTRO
}

model TicketType {
  id              Int               @id @default(autoincrement())
  name            String // Ej: 'Simple', 'Con tapa y bebida'
  price           Float
  description     String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ReservationItem ReservationItem[]
}

model Reservation {
  id              Int      @id @default(autoincrement())
  reservationCode String   @unique
  customerName    String
  customerEmail   String
  showId          Int
  createdAt       DateTime @default(now())

  show  Show              @relation(fields: [showId], references: [id])
  items ReservationItem[]
}

model ReservationItem {
  id            Int @id @default(autoincrement())
  reservationId Int
  typeId        Int
  quantity      Int @default(1)

  reservation   Reservation  @relation(fields: [reservationId], references: [id])
  type          TicketType   @relation(fields: [typeId], references: [id])
  cashClosureId Int?
  cashClosure   CashClosure? @relation("CashClosureTickets", fields: [cashClosureId], references: [id])
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Income    Income[]
  Expense   Expense[]

  CashClosure CashClosure[]
}

enum IncomeType {
  tickets
  tickets_web
  barra
  otros
}

model Income {
  id            Int            @id @default(autoincrement())
  amount        Float
  date          DateTime       @default(now())
  type          IncomeType?
  paymentMethod PaymentMethod?
  description   String?
  userId        Int?
  user          User?          @relation(fields: [userId], references: [id])

  cashClosureId Int? // Para el cierre de caja
  cashClosure   CashClosure? @relation("CashClosureIncomes", fields: [cashClosureId], references: [id])
}

enum PaymentMethod {
  efectivo
  tarjeta
  bizum
  transferencia
  otro
  varios
}

enum ExpenseCategory {
  publicidad
  bar
  sueldos
  artistas
  alquiler
  servicios
  insumos
  mantenimiento
  comisiones
  varios
}

model Expense {
  id          Int             @id @default(autoincrement())
  amount      Float
  category    ExpenseCategory
  description String?
  date        DateTime        @default(now())
  userId      Int?
  user        User?           @relation(fields: [userId], references: [id])

  cashClosureId Int? // Para el cierre de caja
  cashClosure   CashClosure? @relation("CashClosureExpenses", fields: [cashClosureId], references: [id])
}

model CashClosure {
  id                Int      @id @default(autoincrement())
  date              DateTime @unique
  total             Float
  totalIncomes      Float? // <--- nuevo
  totalExpenses     Float? // <--- nuevo
  ticketsSoldAmount Float
  ticketsSoldWeb    Int
  ticketsSold       Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  userId Int?
  user   User? @relation(fields: [userId], references: [id])

  incomes  Income[]          @relation("CashClosureIncomes")
  expenses Expense[]         @relation("CashClosureExpenses")
  shows    Show[]            @relation("CashClosureShows")
  tickets  ReservationItem[] @relation("CashClosureTickets")
}
